package com.badar.tms.models;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;

import com.badar.tms.enumrations.MediaStatuses;

@Entity
@Table(name="Medias")
public class TicketMedias {

	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long id;
	private String name;
	private String url;
	@Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, updatable = false)
    @CreatedDate
    private Date createdAt;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_at", nullable = false)
    @LastModifiedDate
    private Date updatedAt;
    
    @Enumerated(EnumType.STRING)
    private MediaStatuses status;
    
    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "ticket_id", nullable = false)
    @OnDelete(action = OnDeleteAction.CASCADE)
    private Tickets ticket;
    

	public TicketMedias() {
		super();
	}


	public TicketMedias(String name, String url, Date createdAt, Date updatedAt, MediaStatuses status, Tickets ticket) {
		super();
		this.name = name;
		this.url = url;
		this.status = status;
		this.ticket = ticket;
	}





	public long getId() {
		return id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public Date getCreatedAt() {
		return createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	public Date getUpdatedAt() {
		return updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	public MediaStatuses getStatus() {
		return status;
	}

	public void setStatus(MediaStatuses status) {
		this.status = status;
	}


	public Tickets getTicket() {
		return ticket;
	}


	public void setTicket(Tickets ticket) {
		this.ticket = ticket;
	}


	@Override
	public String toString() {
		return "TicketMedias [getId()=" + getId() + ", getName()=" + getName() + ", getUrl()=" + getUrl()
				+ ", getCreatedAt()=" + getCreatedAt() + ", getUpdatedAt()=" + getUpdatedAt() + ", getStatus()="
				+ getStatus() + ", getTicket()=" + getTicket() + "]";
	}
    
}
